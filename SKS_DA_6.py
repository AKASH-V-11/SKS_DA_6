# -*- coding: utf-8 -*-
"""SKS_DA_6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tSe6z-uu5b7goTOr-mHzaduZm-7ie1H8

# **üìò SAIKET SYSTEMS INTERNSHIP - TASK 6‚úÖ**
---
# ‚úÖ"PROJECT-CUSTOMER CHURN ANALYSIS AND PREDICTION"
---
**6.DATA VISUALIZATIONS**
---

~BY AKASH. V

---

# üéØ **Task Description:**
# - Create meaningful visualizations for deeper insight
# - Use box plots, violin plots, pair plots, etc.

# 1Ô∏è‚É£ Import Required Libraries
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

sns.set(style="whitegrid")  # colorful modern style

"""# 2Ô∏è‚É£ Load Cleaned Dataset"""

df = pd.read_csv("cleaned_churn_data.csv")

"""# 3Ô∏è‚É£ Box Plot - Monthly Charges vs Churn"""

plt.figure(figsize=(8,6))
sns.boxplot(x='Churn', y='MonthlyCharges', data=df, palette='Set3')
plt.title('üì¶ Monthly Charges by Churn')
plt.xlabel('Churn (0 = No, 1 = Yes)')
plt.ylabel('Monthly Charges')
plt.show()

"""# 4Ô∏è‚É£ Violin Plot - Tenure vs Churn"""

plt.figure(figsize=(8,6))
sns.violinplot(x='Churn', y='tenure', data=df, palette='Set2')
plt.title('üéª Tenure Distribution by Churn')
plt.xlabel('Churn')
plt.ylabel('Tenure (months)')
plt.show()

"""# 5Ô∏è‚É£ Pair Plot - Selected Features"""

selected_features = ['tenure', 'MonthlyCharges', 'TotalCharges', 'Churn']
sns.pairplot(df[selected_features], hue='Churn', palette='husl', corner=True)
plt.suptitle('üîó Pair Plot of Key Features', y=1.02)
plt.show()

"""# 6Ô∏è‚É£ KDE Plot - LTV vs Churn (if available)"""

if 'LTV' not in df.columns:
    df['LTV'] = df['MonthlyCharges'] * df['tenure']

plt.figure(figsize=(10,6))
sns.kdeplot(data=df, x='LTV', hue='Churn', fill=True, palette='coolwarm', alpha=0.5)
plt.title('üí∞ Lifetime Value Distribution by Churn')
plt.xlabel('Customer LTV')
plt.ylabel('Density')
plt.show()

"""# 7Ô∏è‚É£ Heatmap of Correlation Matrix"""

plt.figure(figsize=(12, 8))
corr = df.corr(numeric_only=True)
sns.heatmap(corr, cmap='YlGnBu', annot=False)
plt.title('üî• Correlation Heatmap')
plt.show()

"""# üé®**Skills Gained:**
# - Advanced data visualization using Seaborn & Matplotlib
# - Insight storytelling via charts

### ‚úÖ **Conclusion ‚Äì Task 6: Data Visualizations**

In this final task, we created a variety of colorful and insightful visualizations including box plots, violin plots, pair plots, KDE plots, and a correlation heatmap. These visual tools helped us better understand the patterns and relationships in the data, particularly how different features influence customer churn.

Effective visualizations not only enhance interpretation but also support storytelling, making complex data easier to communicate with stakeholders and decision-makers.

 **~AKASH. V - DATA ANALYSIS INTERN AT SAIKET SYSTEMS**
"""